# PageFragment Template (Template)
# Template file - edit values before importing
# 
# INSTRUCTIONS:
# 1. AUTO-GENERATED fields are optional - uncomment to set specific values
# 2. Update foreign key UUIDs to reference existing records
# 3. Edit all other values as needed
# 4. Foreign key constraints must be satisfied before import
# Template file - edit values before importing
# Exported from template CLI

PageFragment:
  meta:
    tablename: page_fragments
    schema: public
  data:
    page_id: 00000000-0000-0000-0000-000000000030
    # NOTE: page_id must reference existing record UUID
    fragment_type: content
    fragment_name: Theme Home
    fragment_key: base
    content_type: text/html
    version_number: 1
    version_label: v1.0
    is_active: true
    content_source: |
            <!-- Container for the dynamic table -->
            <div id="dynamic_table_container"></div>

            <script>

            $(document).ready(function() {
                // Create global reference for action handlers
                window.theme_table = new DynamicDataTable('dynamic_table_container', 'Theme', '{{ url_for('miner.data') }}', {
                    table_title: 'Theme Management',
                    table_description: 'Design and manage page Themes and layouts',
                    columns: {
                        name: {
                            order: 1,
                            searchable: true,
                            label: 'Theme Name'
                        },
                        description: {
                            order: 2,
                            searchable: true,
                            label: 'Description'
                        },
                        is_active: {
                            order: 3,
                            searchable: false,  // Don't search on boolean
                            format: 'boolean',
                            label: 'Active'
                        },
                        created_at: {
                            order: 4,
                            searchable: false,
                            format: 'date',
                            label: 'Created'
                        },
                        updated_at: {
                            order: 5,
                            searchable: false,
                            format: 'date',
                            label: 'Last Updated'
                        }
                    },
                    excluded_columns: ['password_hash', 'created_by', 'updated_by', 'deleted_at'],
                    actions: ['edit', 'copy', , 'delete'],
                    create_url: "{{ url_for('theme.create_Theme') }}",
                    edit_url: "{{ url_for('theme.edit_Theme', Theme_id='{id}') }}",
                    custom_handlers: {
                        preview: function(id) {
                            window.open("{{ url_for('theme.preview_Theme', theme_id='UUID_PLACEHOLDER') }}".replace('UUID_PLACEHOLDER', id), '_blank');
                        },
                        export: function(id) {
                            window.theme_table.api_request({
                                model: "Theme",
                                operation: "read",
                                id: id,
                                export: true
                            }, function(response) {
                                if (response.success && response.data) {
                                    const blob = new Blob([JSON.stringify(response.data, null, 2)], { type: 'application/json' });
                                    const url = window.URL.createObjectURL(blob);
                                    const a = document.createElement('a');
                                    a.href = url;
                                    a.download = `theme_${response.data.name || id}.json`;
                                    document.body.appendChild(a);
                                    a.click();
                                    window.URL.revokeObjectURL(url);
                                    document.body.removeChild(a);
                                    window.theme_table.show_notification('Theme exported successfully', 'success');
                                }
                            });
                        }
                    }
                });
                
                theme_table.init();
            });
            </script>
    content_hash: null
    variables_data: null
    template_fragment_key: null
    description: Main content block for the page, contains title and body content
    sort_order: 1
    is_published: true
    publish_date: null
    expire_date: null
    cache_duration: 3600
    last_rendered: null
    change_description: Initial content fragment for page
    created_by_user_id: null
    # NOTE: created_by_user_id must reference existing record UUID
    # id: 12345678-1234-1234-1234-123456789abc  # AUTO-GENERATED: Optional, system will create if not provided
    # created_at: '2024-01-01T00:00:00'  # AUTO-GENERATED: Optional, system will create if not provided
    # updated_at: '2024-01-01T00:00:00'  # AUTO-GENERATED: Optional, system will create if not provided



            